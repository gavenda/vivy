name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      branch:
        required: true
        description: Branch to deploy
        default: main
        type: string
      environment:
        required: true
        description: 'Environment to deploy'
        default: development
        type: environment

run-name: Deploy branch '${{ inputs.branch }}' to ${{ inputs.environment }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
        with:
          ref: ${{ inputs.branch }}
      - uses: pnpm/action-setup@v3
        name: Set up pnpm
        with:
          run_install: true
      - uses: actions/setup-node@v4
        name: Set up Node.js
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
      - run: pnpm lint
        name: Lint
        continue-on-error: true
      - run: |
          pnpm clean
          pnpm build
        name: Build
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'production' }}
    steps:
      - uses: actions/checkout@v4
        name: Checkout
        with:
          ref: ${{ inputs.branch }}
      - run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ./deploy.key
          sudo chmod 600 ./deploy.key
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        name: 'Set up SSH'
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
      - uses: pnpm/action-setup@v3
        name: Set up pnpm
        with:
          run_install: true
      - uses: actions/setup-node@v4
        name: Set up Node.js
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'
      - run: curl -fsS https://dotenvx.sh/ | sh
        name: Set up @dotenvx/dotenvx
      - run: dotenvx run -- pnpm exec pm2 deploy ecosystem.config.cjs ${{ inputs.environment }}
        name: Deploy to ${{ inputs.environment }}
        env:
          APP_BRANCH: origin/${{ inputs.branch }}
          DOTENV_KEY: ${{ secrets.DOTENV_KEY }}
