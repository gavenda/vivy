name: Deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    environment: production
    name: Build and Register
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - uses: pnpm/action-setup@v3
        name: Set up pnpm
        with:
          run_install: true
      - uses: actions/setup-node@v4
        name: Set up Node.js
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'
      - run: pnpm lint
        name: Lint
        continue-on-error: true
      - run: |
          pnpm clean
          pnpm build
        name: Build
      - run: |
          pnpm register
        name: Register
        env:
          TOKEN: ${{ secrets.TOKEN }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
  docker:
    name: Push to Docker
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout
      - name: Set up Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            gavenda/vivy
          flavor: |
            latest=true
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - uses: docker/setup-buildx-action@v3
        name: Set up Docker Buildx
      - uses: docker/login-action@v3
        name: Login to DockerHub
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        name: Build and push
        with:
          file: ./Dockerfile
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: 'linux/amd64,linux/arm64'
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
